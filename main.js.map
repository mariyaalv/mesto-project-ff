{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project/./src/components/card.js","webpack://mesto-project/./src/components/modal.js","webpack://mesto-project/./src/index.js","webpack://mesto-project/./src/components/cards.js"],"sourcesContent":["// @todo: Функция создания карточки \r\nexport function createCards(cardTemplate, imageData, cardData, deleteFunction, likeFunction, openPopupCard) { // функция принимает в аргументах данные одной карточки\r\n  const cardElement = cardTemplate.querySelector(cardData.card).cloneNode(true); //клонировали шаблонный элемент\r\n//наполняем содержимым\r\n  const cardImage = cardElement.querySelector(cardData.image);\r\n  cardImage.src = imageData.link;\r\n  cardImage.alt = `Место: ${imageData.name}`;\r\n  cardElement.querySelector(cardData.title).textContent = imageData.name;\r\n\r\n  const cardDeleteButton = cardElement.querySelector(cardData.buttonDelete); //нашли кнопку удаления\r\n  cardDeleteButton.addEventListener('click', () => deleteFunction(cardElement)); //функция-обработчик клика по иконке => будет вызван переданный в аргументах колбэк\r\n\r\n  const cardLikeButton = cardElement.querySelector(cardData.buttonLike);\r\n  cardLikeButton.addEventListener('click', evt => likeFunction(evt, cardData.buttonLikeActive));\r\n\r\n  cardImage.addEventListener('click', () => openPopupCard(imageData.link, imageData.name));\r\n\r\n  return cardElement; //возвращаем готовые объект карточки\r\n}\r\n\r\n// @todo: Функция-колбэк для удаления карточки\r\nexport function deleteCards(cardElement) {\r\n  cardElement.remove();\r\n}\r\n\r\n// @todo: Функция-колбэк для лайка карточки\r\nexport function likeCards(evt, selector) {\r\n  const eventTarget = evt.target;\r\n  eventTarget.classList.toggle(selector);\r\n}","// @todo: функция открытия модального окна\r\nexport function openModal (popupElement) {\r\n  popupElement.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closeByEsc);\r\n}\r\n\r\n// @todo: функция закрытия модального окна\r\nexport function closeModal (popupElement) {\r\n  popupElement.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closeByEsc);\r\n}\r\n\r\n// @todo: функция-обработчик события нажатия Esc\r\nfunction closeByEsc (evt) {\r\n  if(evt.key === 'Escape') {\r\n    closeModal(document.querySelector('.popup_is-opened'));\r\n  }\r\n}","import \"./pages/index.css\";\r\nimport { initialCards } from \"./components/cards.js\";\r\nimport { createCards, deleteCards, likeCards } from \"./components/card\";\r\nimport { openModal, closeModal } from \"./components/modal.js\";\r\n\r\nconst cardTmp = document.querySelector(\"#card-template\").content; //получили доступ к содержимому\r\nconst placesList = document.querySelector(\".places__list\"); //место, куда будут добавлены карточки\r\nconst cardData = {\r\n  //вынесли данные карточки в объект\r\n  card: \".places__item\",\r\n  image: \".card__image\",\r\n  title: \".card__title\",\r\n  buttonLike: \".card__like-button\",\r\n  buttonLikeActive: \"card__like-button_is-active\",\r\n  buttonDelete: \".card__delete-button\",\r\n};\r\n\r\nconst buttonAdd = document.querySelector(\".profile__add-button\");\r\nconst buttonEdit = document.querySelector(\".profile__edit-button\");\r\nconst buttonsClose = document.querySelectorAll(\".popup__close\");\r\nconst popupEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupAdd = document.querySelector(\".popup_type_new-card\");\r\nconst popupImage = document.querySelector(\".popup_type_image\");\r\nconst picturePopupImage = popupImage.querySelector(\".popup__image\");\r\nconst captionPopupImage = popupImage.querySelector(\".popup__caption\");\r\n\r\nconst formEditCard = document.forms[\"edit-profile\"];\r\nconst nameInput = formEditCard.querySelector(\".popup__input_type_name\");\r\nconst jobInput = formEditCard.querySelector(\".popup__input_type_description\");\r\nconst profileName = document.querySelector(\".profile__title\");\r\nconst profileJob = document.querySelector(\".profile__description\");\r\n\r\nconst formNewCard = document.forms[\"new-place\"];\r\nconst namePlaceInput = formNewCard.querySelector(\".popup__input_type_card-name\");\r\nconst urlPlaceInput = formNewCard.querySelector(\".popup__input_type_url\");\r\n\r\n// @todo: функция добавления карточек вынесена отдельно\r\nfunction addCard(place, cards) {\r\n  place.append(cards);\r\n}\r\n\r\n//для каждого элемента из массива initialCards должна запуститься функция\r\ninitialCards.forEach((element) => {\r\n  addCard(\r\n    placesList,\r\n    createCards(cardTmp, element, cardData, deleteCards, likeCards, openImage)\r\n  );\r\n});\r\n\r\nbuttonEdit.addEventListener(\"click\", function () {\r\n  nameInput.value = profileName.textContent; //перед открытием заполняем поля актуальными данными\r\n  jobInput.value = profileJob.textContent;\r\n  openModal(popupEdit);\r\n});\r\n\r\nbuttonAdd.addEventListener(\"click\", function () {\r\n  openModal(popupAdd);\r\n});\r\n\r\n// @todo: функция-обработчик закрытия по крестику и события клика по оверлею\r\nbuttonsClose.forEach((btn) => {\r\n  const popup = btn.closest(\".popup\");\r\n  btn.addEventListener(\"click\", () => closeModal(popup));\r\n  popup.addEventListener(\"mousedown\", (evt) => {\r\n    if (evt.target.classList.contains(\"popup\")) {\r\n      closeModal(popup);\r\n    }\r\n  });\r\n});\r\n\r\n// @todo: Функция-колбэк для просмотра карточки\r\nfunction openImage(link, name) {\r\n  picturePopupImage.src = link;\r\n  picturePopupImage.alt = name;\r\n  captionPopupImage.textContent = name;\r\n  openModal(popupImage);\r\n}\r\n\r\n// Обработчик «отправки» формы (пока она никуда отправляться не будет)\r\nfunction handleFormSubmit() {\r\n  evt.preventDefault();\r\n  profileName.textContent = nameInput.value;\r\n  profileJob.textContent = jobInput.value;\r\n  closeModal(popupEdit);\r\n}\r\n\r\n// Прикрепляем обработчик к форме:\r\nformEditCard.addEventListener(\"submit\", handleFormSubmit);\r\n\r\n// Обработчик добавления карточки\r\nfunction addNewCardSubmit() {\r\n  evt.preventDefault();\r\n  const cardNewData = {\r\n    name: namePlaceInput.value,\r\n    link: urlPlaceInput.value,\r\n  };\r\n  placesList.prepend(\r\n    createCards(\r\n      cardTmp,\r\n      cardNewData,\r\n      cardData,\r\n      deleteCards,\r\n      likeCards,\r\n      openImage\r\n    )\r\n  );\r\n  closeModal(popupAdd);\r\n  formNewCard.reset();\r\n}\r\n\r\nformNewCard.addEventListener(\"submit\", addNewCardSubmit);\r\n\r\n// const enablevalidation = () => {\r\n//   const formList = Array.from(querySelectorAll('.popup__form'));\r\n//   formList.forEach((formElement) => {\r\n//     formElement.addEventListener('submit', (evt) => {\r\n//       evt.preventDefault();\r\n//     })\r\n//   })\r\n// }\r\n","export const initialCards = [\r\n    {\r\n      name: \"Архыз\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n    },\r\n    {\r\n      name: \"Челябинская область\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n    },\r\n    {\r\n      name: \"Иваново\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n    },\r\n    {\r\n      name: \"Камчатка\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n    },\r\n    {\r\n      name: \"Холмогорский район\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n    },\r\n    {\r\n      name: \"Байкал\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n    }\r\n];"],"names":["createCards","cardTemplate","imageData","cardData","deleteFunction","likeFunction","openPopupCard","cardElement","querySelector","card","cloneNode","cardImage","image","src","link","alt","concat","name","title","textContent","buttonDelete","addEventListener","buttonLike","evt","buttonLikeActive","deleteCards","remove","likeCards","selector","target","classList","toggle","openModal","popupElement","add","document","closeByEsc","closeModal","removeEventListener","key","cardTmp","content","placesList","buttonAdd","buttonEdit","buttonsClose","querySelectorAll","popupEdit","popupAdd","popupImage","picturePopupImage","captionPopupImage","formEditCard","forms","nameInput","jobInput","profileName","profileJob","formNewCard","namePlaceInput","urlPlaceInput","openImage","forEach","element","place","cards","append","value","btn","popup","closest","contains","preventDefault","cardNewData","prepend","reset"],"sourceRoot":""}